#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã OpenAI API
"""
import asyncio
from openai import AsyncOpenAI
from config import settings

async def test_openai():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenAI"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API...")
    
    if not settings.openai_api_key:
        print("‚ùå OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env!")
        return
    
    try:
        client = AsyncOpenAI(api_key=settings.openai_api_key)
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
        print("üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...")
        response = await client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": "Say hello in Russian"}
            ],
            max_tokens=50
        )
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {response.choices[0].message.content}")
        print(f"‚úÖ –ú–æ–¥–µ–ª—å: {response.model}")
        print(f"‚úÖ OpenAI API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ OpenAI API: {e}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
        print("2. –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∫—Ä–µ–¥–∏—Ç—ã")
        print("3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")

if __name__ == "__main__":
    asyncio.run(test_openai())
