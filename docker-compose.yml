version: '3.8'

services:
  bot:
    build: .
    container_name: clore-bot-pro
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://clore:clorepass@postgres:5432/clorebot
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - clore-network

  postgres:
    image: postgres:15-alpine
    container_name: clore-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=clore
      - POSTGRES_PASSWORD=clorepass
      - POSTGRES_DB=clorebot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clore -d clorebot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clore-network

  # Опциональный Redis для кеширования
  redis:
    image: redis:7-alpine
    container_name: clore-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - clore-network

volumes:
  postgres_data:
  redis_data:

networks:
  clore-network:
    driver: bridge